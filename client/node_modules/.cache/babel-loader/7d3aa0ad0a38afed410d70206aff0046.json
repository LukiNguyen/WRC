{"ast":null,"code":"var _jsxFileName = \"D:\\\\Video-Chat\\\\client\\\\src\\\\components\\\\options\\\\Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\nimport Phone from \"../../assests/phone.gif\";\nimport Teams from \"../../assests/teams.mp3\";\nimport * as classes from \"./Options.module.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport VideoContext from \"../../context/VideoContext\";\nimport { CopyOutlined, InfoCircleOutlined, PhoneOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Options = () => {\n  _s();\n\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const Audio = useRef();\n  const {\n    call,\n    callAccepted,\n    callEnded,\n    me,\n    callUser,\n    leaveCall,\n    answerCall,\n    setOtherUser,\n    leaveCall1\n  } = useContext(VideoContext);\n  useEffect(() => {\n    var _Audio$current2;\n\n    if (isModalVisible) {\n      var _Audio$current;\n\n      Audio === null || Audio === void 0 ? void 0 : (_Audio$current = Audio.current) === null || _Audio$current === void 0 ? void 0 : _Audio$current.play();\n    } else Audio === null || Audio === void 0 ? void 0 : (_Audio$current2 = Audio.current) === null || _Audio$current2 === void 0 ? void 0 : _Audio$current2.pause();\n  }, [isModalVisible]);\n\n  const showModal = showVal => {\n    setIsModalVisible(showVal);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    leaveCall1();\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (call.isReceivingCall && !callAccepted) {\n      setIsModalVisible(true);\n      setOtherUser(call.from);\n    } else setIsModalVisible(false);\n  }, [call.isReceivingCall]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.options,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.share_options,\n        children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: me,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            icon: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this),\n            className: classes.btn,\n            tabIndex: \"0\",\n            onClick: () => message.success(\"Code copied successfully!\"),\n            children: \"Copy code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"M\\xE3 cu\\u1ED9c g\\u1ECDi\",\n        size: \"large\",\n        className: classes.inputgroup,\n        value: idToCall,\n        onChange: e => setIdToCall(e.target.value),\n        style: {\n          marginRight: \"0.5rem\",\n          marginBottom: \"0.5rem\"\n        },\n        suffix: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Nh\\u1EADp m\\xE3 \\u0111\\u1EC3 th\\u1EF1c hi\\u1EC7n cu\\u1ED9c g\\u1ECDi\",\n          children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n            style: {\n              color: \"rgba(0,0,0,.45)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: leaveCall,\n        className: classes.hang,\n        tabIndex: \"0\",\n        children: \"\\xA0 Gi\\u1EEF m\\xE1y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          callUser(idToCall);\n        },\n        className: classes.btn,\n        tabIndex: \"0\",\n        children: \"G\\u1ECDi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), call.isReceivingCall && !callAccepted && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: Teams,\n        loop: true,\n        ref: Audio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Incoming Call\",\n        visible: isModalVisible,\n        onOk: () => showModal(false),\n        onCancel: handleCancel,\n        footer: null,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [call.name, \" is calling you:\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Phone,\n              alt: \"phone ringing\",\n              className: classes.phone,\n              style: {\n                display: \"inline-block\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.btnDiv,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.answer,\n            color: \"#29bb89\",\n            onClick: () => {\n              answerCall();\n              Audio.current.pause();\n            },\n            tabIndex: \"0\",\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.decline,\n            onClick: () => {\n              setIsModalVisible(false);\n              Audio.current.pause();\n            },\n            tabIndex: \"0\",\n            children: \"Decline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Options, \"fSbLHg2h+1m5jIm2SJv9bDJn0hk=\");\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["D:/Video-Chat/client/src/components/options/Options.js"],"names":["React","useState","useContext","useEffect","useRef","Input","Button","Tooltip","Modal","message","Phone","Teams","classes","CopyToClipboard","VideoContext","CopyOutlined","InfoCircleOutlined","PhoneOutlined","Options","idToCall","setIdToCall","isModalVisible","setIsModalVisible","Audio","call","callAccepted","callEnded","me","callUser","leaveCall","answerCall","setOtherUser","leaveCall1","current","play","pause","showModal","showVal","handleCancel","window","location","reload","isReceivingCall","from","options","marginBottom","share_options","btn","success","inputgroup","e","target","value","marginRight","color","hang","display","justifyContent","name","phone","btnDiv","answer","decline"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\r\nimport Phone from \"../../assests/phone.gif\";\r\nimport Teams from \"../../assests/teams.mp3\";\r\nimport * as classes from \"./Options.module.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport VideoContext from \"../../context/VideoContext\"; \r\nimport { \r\n  CopyOutlined,\r\n  InfoCircleOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\"; \r\n\r\nconst Options = () => {\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const Audio = useRef();\r\n  const {\r\n    call,\r\n    callAccepted, \r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall, \r\n    setOtherUser,\r\n    leaveCall1,\r\n  } = useContext(VideoContext);\r\n\r\n  useEffect(() => {\r\n    if (isModalVisible) {\r\n      Audio?.current?.play();\r\n    } else Audio?.current?.pause();\r\n  }, [isModalVisible]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    leaveCall1();\r\n    window.location.reload();\r\n  };\r\n  useEffect(() => {\r\n    if (call.isReceivingCall && !callAccepted) {\r\n      setIsModalVisible(true);\r\n      setOtherUser(call.from);\r\n    } else setIsModalVisible(false);\r\n  }, [call.isReceivingCall]);\r\n\r\n  return (\r\n    <div className={classes.options}>\r\n      <div style={{ marginBottom: \"0.5rem\" }}> \r\n        <div className={classes.share_options}>\r\n          <CopyToClipboard text={me}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<CopyOutlined />}\r\n              className={classes.btn}\r\n              tabIndex=\"0\"\r\n              onClick={() => message.success(\"Code copied successfully!\")}\r\n            >\r\n              Copy code\r\n            </Button>\r\n          </CopyToClipboard> \r\n        </div>\r\n      </div>\r\n      <div style={{ marginBottom: \"0.5rem\" }}> \r\n        <Input\r\n          placeholder=\"Mã cuộc gọi\"\r\n          size=\"large\"\r\n          className={classes.inputgroup}\r\n          value={idToCall}\r\n          onChange={(e) => setIdToCall(e.target.value)}\r\n          style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }} \r\n          suffix={\r\n            <Tooltip title=\"Nhập mã để thực hiện cuộc gọi\">\r\n              <InfoCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\r\n            </Tooltip>\r\n          }\r\n        />\r\n\r\n        {callAccepted && !callEnded ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={leaveCall}\r\n            className={classes.hang}\r\n            tabIndex=\"0\"\r\n          > \r\n            &nbsp; Giữ máy\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n             callUser(idToCall);\r\n            }}\r\n            className={classes.btn}\r\n            tabIndex=\"0\"\r\n          >\r\n            Gọi\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {call.isReceivingCall && !callAccepted && (\r\n        <>\r\n          <audio src={Teams} loop ref={Audio} />\r\n          <Modal\r\n            title=\"Incoming Call\"\r\n            visible={isModalVisible}\r\n            onOk={() => showModal(false)}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <h1>\r\n                {call.name} is calling you:{\" \"}\r\n                <img\r\n                  src={Phone}\r\n                  alt=\"phone ringing\"\r\n                  className={classes.phone}\r\n                  style={{ display: \"inline-block\" }}\r\n                />\r\n              </h1>\r\n            </div>\r\n            <div className={classes.btnDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.answer}\r\n                color=\"#29bb89\" \r\n                onClick={() => {\r\n                  answerCall();\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Answer\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.decline} \r\n                onClick={() => {\r\n                  setIsModalVisible(false);\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Decline\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n"]},"metadata":{},"sourceType":"module"}